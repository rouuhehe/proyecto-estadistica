---
title: "Tendencias y factores clave en la compra de laptops por estudiantes universitarios en Lima Metropolitana."
author:
  - Yaritza Milagros López Rojas
  - Carlos Alberto Zavalaga Hilasaca
  - Sydni Samina Sánchez León
  - Gerardo Alair Angulo Huanca
  - Paulo Isael Miranda Barrientos
lang: es
format:
  html:
    toc: true
    toc-location: right
    number-sections: true
    theme: cosmo
    fontsize: 1.1em
    code-fold: true
editor: visual
---

# Introducción

## Relevancia

Conocer las tendencias y procesos detrás de la decisión de compra de laptops de estudiantes universitarios es importante tanto para el sector comercial, por las oportunidades de mercado, como para los estudiantes. Pues su objetivo es elegir una laptop que responda a las exigencias y competencias académicas. Este estudio se centra en recolectar y analizar la relación entre factores clave que influyen en la compra de laptops por parte de estudiantes universitarios de Lima Metropolitana. De esta manera, se logrará no solo identificar patrones de consumo, sino también servirá de guía para futuros compradores.

## Objetivos:

### Objetivo General:

Identificar las principales tendencias y factores que, en 2025, influyen en la elección de laptops por parte de los estudiantes, tomando en cuenta sus necesidades y preferencias tecnológicas.

### Objetivos Específicos:

-   Explorar la relación entre la carrera del estudiante y el factor de mayor importancia en la elección de laptops por parte de los estudiantes.

-   Analizar la relación entre el factor de mayor importancia en el momento de la elección de laptops y la escala socioeconómica de los alumnos.

## Contexto:

Con el pasar de los años, la tecnología ha evolucionado significativamente, introduciendo nuevas marcas y modelos de laptops que han marcado un antes y después en el mercado. Este suceso ha generado una gran cantidad de información relacionada con estos dispositivos, lo que ha hecho que, para muchos estudiantes universitarios, la elección de una laptop se convierta en una decisión compleja. Diversos factores influyen en este proceso, por lo que los estudiantes deben investigar distintas fuentes para encontrar una opción que se adecúe a sus necesidades académicas y personales.

## Planificación:

Se utilizó un *diagrama de Gantt* para la repartición y organización de los diferentes pasos del proyecto.

```{r, , message=FALSE, warning=FALSE, echo=TRUE}
#install.packages("ggplot2")
#install.packages("tidyr")
#install.packages("lubridate")
library(ggplot2)
library(tidyr)
library(lubridate)
library(dplyr)
library(readr)

today <- Sys.Date()
diagrama <- read.csv("Diagrama de gantt - Hoja 1 (3).csv") 
diagrama$Start <- paste(diagrama$Start,"/2025") 
diagrama$End <- paste(diagrama$End,"/2025") 
diagrama$Start <- dmy(diagrama$Start) 
diagrama$End <- dmy(diagrama$End) 

for (i in 1:nrow(diagrama)) {
  if (diagrama$End[i] < today) {
    diagrama$Completado[i] <- "Verdadero"
  } else {
    diagrama$Completado[i] <- "Falso"
  }
}
orden_etapas <- c()
for (i in 1:nrow(diagrama)) {
  orden_etapas[i]<- diagrama$Etapa[i]
}
orden_etapas <- rev(orden_etapas)

df <- diagrama

df.melt <- df %>%
  tidyr::pivot_longer(col = c(Start, End))

df.melt$Etapa <- factor(df.melt$Etapa, levels = orden_etapas)

p1 <- ggplot(df.melt, aes(x = value, y = Etapa, colour = Completado))
p1 <- p1 + geom_line(alpha = 0.5, linewidth = 7)
p1 <- p1 + labs(title = "Diagrama de Gantt")
p1 <- p1 + labs(x = "Fecha")
p1 <- p1 + geom_vline(xintercept = today, color = "gray", linewidth = 2, alpha = 0.5)

p1

```

# Datos

## Población objetivo:

### Población:

Estudiantes universitarios de Lima Metropolitana que poseen una laptop.

### Muestra:

1800 estudiantes de distintas universidades de Lima Metropolitana que cuentan con una laptop.

### Tipo de muestreo:

**Muestreo no probabilístico por conveniencia**, puesto a que la muestra fue realizada por los integrantes del grupo a personas dentro de su círculo social.

## Recolección de datos:

Se realizó una encuesta por Google Forms a estudiantes de diversas carreras en distintas universidades de Lima Metropolitana.

## Variables:

| *Variable* | *Tipo* | *Descripción* | *Restricciones* |
|------------------|------------------|------------------|------------------|
| Edad | Cuantitativa discreta | Edad en años del estudiante encuestado. | Es un número entero mayor igual a 16 y menor igual a 29 |
| Antigüedad | Cuantitativa discreta | Número de años que pasaron desde la laptop. | Es un número entero no negativo. |
| RAM | Cuantitativa discreta | Capacidad de la RAM medida en GB. | Es un número entero no negativos. |
| Costo | Cuantitativa continua | Precio de la laptop en moneda local. | Número no negativo |
| Tiempo de uso | Cuantitativa continua | Tiempo en horas de uso diario. | Número no negativo |
| Marca | Cualitativa nominal | Marca de la laptop adquirida. | Ejemplo: HP, Dell, Lenovo, Apple y otros. |
| Sexo | Cualitativa nominal | Sexo del estudiante. | Deber ser o Masculino o Femenino |
| Tipo | Cualitativa nominal | Clasificación según diseño o funcionalidad. | Las mencionadas en las alternativas: Ultrabook, Gamer y otros. |
| Carrera | Cualitativa nominal | Área de la cual pertenece la carrera del estudiante. | Las mencionadas en las alternativas: Ingeniería, Ciencias y otros. |
| Factor importante | Cualitativa nominal | Criterio principal en la decisión de compra. | Las mencionadas en las alternativas: precio, marca, diseño y otros. |
| Sistema operativo | Cualitativa nominal | Sistema operativo instalado. | Las mencionadas en las alternativas. Ejemplo: Windows, macOS, y otros. |
| Publicidad | Cualitativa ordinal | Percepción sobre la influencia de la publicidad en la compra. | Cinco grados desde muy influenciado a muy influenciado. |
| Satisfacción | Cualitativa ordinal | Grado de satisfacción del estudiante respecto a la laptop. | Cinco grados desde muy satisfecho a muy insatisfecho. |
| Escala | Cualitativa ordinal | Información socioeconómica del estudiante. | Desde la A hasta la E de acuerdo a lo establecido por el INEI. |

# Limpieza de datos

#### Corregimiento del DataFrame

Se eliminaron columnas que no aportaban valor al análisis con el fin de trabajar únicamente con la información relevante.

```{r}
library(readr)
library(tidyr)
library(dplyr)
DF_original <- read.csv("tendencias y factores.csv")
DF <- DF_original # DF es una copia del dataframe original
DF <- DF_original[, -c(1,2,4,18:147,164:175)] # se eliminan las columnas que no se utilizarán
DF <- DF[,-c(15,17)]
```

```{r}
DF <- rename(DF,
            "Carrera" = "Área.de.la.carrera.que.estudias",
            "Costo"="X.Cuál.fue.el.costo.exacto.de.tu.laptop.actual.en.soles...Ejemplo..2499.90.",
            "Escala" = "X.Cuál.es.tu.escala.socioeconómica.",
            "Antigüedad" = "X.Hace.cuántos.años.compraste.tu.laptop."  ,
            "Marca" = "Marca.de.tu.laptop.actual" ,
            "Tipo" = "Tipo.de.laptop.actual" ,
            "RAM" = "X.Cuál.es.la.capacidad.de.memoria.RAM.de.tu.laptop.actual.",
            "Tiempo de uso" ="X.Cuánto.tiempo.en.horas.y.minutos.crees.que.usas.tu.laptop.por.día..Puede.consultar.el.Screen.Time.de.su.dispositivo." ,
            "Factor importante" = "X.Cuál.fue.el.factor.más.importante.para.elegir.tu.laptop.actual." ,
            "Publicidad" = "X.Qué.tan.influenciado.estuviste.por.la.publicidad.en.redes.sociales.para.elegir.tu.laptop.actual."  ,
            "Sistema operativo" = "X.Qué.sistema.operativo.usas." ,
            "Edad 2" = "Edad.9",
            "Sexo 2" = "Sexo.9",
            "Carrera 2" = "Área.de.la.carrera.que.estudias.9", 
            "Escala 2" = "X.Cuál.es.tu.escala.socioeconómica..9",
            "Costo 2" = "X.Cuál.fue.el.costo.exacto.de.tu.laptop.actual.en.soles...Ejemplo..2499.90..9",
            "Antigüedad 2" = "X.Hace.cuántos.años.compraste.tu.laptop..9",
            "Marca 2" = "Marca.de.tu.laptop.actual.9",
            "Tipo 2" = "Tipo.de.laptop.actual.9",
            "RAM 2" = "X.Cuál.es.la.capacidad.de.memoria.RAM.de.tu.laptop.actual..9",
            "Tiempo de uso 2" = "X.Cuánto.tiempo.en.horas.y.minutos.crees.que.usas.tu.laptop.por.día..Puede.consultar.el.Screen.Time.de.su.dispositivo..9",
            "Factor importante 2" = "X.Cuáles.fueron.los.factores.más.importante.para.elegir.tu.laptop.actual.",
            "Publicidad 2" = "X.Qué.tan.influenciado.estuviste.por.la.publicidad.en.redes.sociales.para.elegir.tu.laptop.actual..9",
            "Sistema operativo 2" = "X.Qué.sistema.operativo.usas.más.",
            "Satisfacción" =  "X.Qué.tan.satisfecho.estás.con.tu.laptop.actual."    ,
            "Satisfacción 2" = "X.Qué.tan.satisfecho.estás.con.tu.laptop.actual..9"  
  
  )

  # mostrar los nuevos encabezados
  str(DF)
```

Dentro de las columnas del *dataframe* se encontraron columnas duplicadas. Estas columnas fueron combinadas para evitar confusiones y para asegurar que los datos se mantuvieran únicos y precisos.

```{r}
# Lista de nombres base para las columnas que deben fusionarse
cabeceras_repetidas <- c(
  "Sexo",
  "Edad",
  "Carrera",
  "Escala",
  "Costo",
  "Antigüedad",
  "Marca",
  "Tipo",
  "RAM",
  "Tiempo de uso",
  "Factor importante",
  "Publicidad",
  "Sistema operativo",
  "Satisfacción"
)

DF <- DF %>% mutate(across(everything(), as.character))
for (nombre in cabeceras_repetidas) {  
  columnas_similares <- DF %>% select(starts_with(nombre))
  DF[[nombre]] <- apply(columnas_similares, 1, function(x) {
    primero_valido <- x[!is.na(x) & x != ""][1]
    if (is.null(primero_valido)) NA else primero_valido
  })
}

# Eliminando columnas ineecesarias
DF <- DF[,-c(15:40)]
```

Posteriormente, se guardó el *dataframe* modificado en un archivo *.csv* para su análisis.

```{r}
# Guardar el archivo final
write_csv(DF, "Sin columnas innecesarias y renombradas.csv")
```

## Limpieza de cada variable

Se empezó generando una tabla en donde se guardó la tabla normalizada y sobre esta misma se trabajó la limpieza de cada variable.

```{r}
DF_Normalizado <- DF
```

#### Carrera

Esta variable se estandarizó siguiendo la clasificación de campos académicos `UNESCO ISCED-F 2013`.

Referencia: `UNESCO Institute for Statistics (2015). ISCED Fields of Education and Training 2013 (ISCED-F 2013).`

-   Valores Iniciales:

| Código | Área                                               |
|--------|----------------------------------------------------|
| 01     | Educación                                          |
| 02     | Artes y Humanidades                                |
| 03     | Ciencias Sociales, Periodismo e Información        |
| 04     | Administración y Derecho                           |
| 05     | Ciencias Naturales, Matemáticas y Estadística      |
| 06     | Tecnologías de la Información y Comunicación (TIC) |
| 07     | Ingeniería, Industria y Construcción               |
| 08     | Agricultura, Silvicultura, Pesca y Veterinaria     |
| 09     | Salud y Bienestar                                  |
| 10     | Servicios (como Turismo, Hotelería)                |

-   Valores Estandarizados:

| Dato original | Categoría ISCED recomendada |
|------------------------------------|------------------------------------|
| Ingeniería | 07 Ingeniería, Industria y Construcción |
| Computación | 06 Tecnologías de la Información y Comunicación (TIC) |
| Ciencias Económicas y Empresariales | 04 Administración y Derecho |
| Agronomía y Ciencias Veterinarias | 08 Agricultura, Silvicultura, Pesca y Veterinaria |
| Ciencias Sociales | 03 Ciencias Sociales, Periodismo e Información |
| Derecho y Ciencias Jurídicas | 04 Administración y Derecho |
| Ciencias Naturales o Biológicas | 05 Ciencias Naturales, Matemáticas y Estadística |
| Humanidades o Letras | 02 Artes y Humanidades |
| Educación | 01 Educación |
| Ciencias de la Salud | 09 Salud y Bienestar |
| Artes | 02 Artes y Humanidades |
| Turismo, Hotelería y Gastronomía | 10 Servicios |
| Ciencias Exactas o Físicas | 05 Ciencias Naturales, Matemáticas y Estadística |
| Matemáticas Puras o Aplicadas | 05 Ciencias Naturales, Matemáticas y Estadística |
| Defensa, Seguridad y Ciencias Militares | 07 Ingeniería, Industria y Construcción (*puede variar*) |
| Arquitectura | 07 Ingeniería, Industria y Construcción |
| Transporte y Logística | 10 Servicios |

```{r}
# Mapeo de carreras
# Cargar tidyverse para manejo de datos
library(tidyverse)

# Crear tabla de mapeo
mapeo_carreras <- tibble(
  carrera_original = c(
    "Ingeniería",
    "Computación",
    "Ciencias Económicas y Empresariales",
    "Agronomía y Ciencias Veterinarias",
    "Ciencias Sociales",
    "Derecho y Ciencias Jurídicas",
    "Ciencias Naturales o Biológicas",
    "Humanidades o Letras",
    "Educación",
    "Ciencias de la Salud",
    "Artes",
    "Turismo, Hotelería y Gastronomía",
    "Ciencias Exactas o Físicas",
    "Matemáticas Puras o Aplicadas",
    "Defensa, Seguridad y Ciencias Militares",
    "Arquitectura",
    "Transporte y Logística"
  ),
  categoria_ISCED = c(
    "Ingeniería, Industria y Construcción",
    "Tecnologías de la Información y Comunicación (TIC)",
    "Administración y Derecho",
    "Agricultura, Silvicultura, Pesca y Veterinaria",
    "Ciencias Sociales, Periodismo e Información",
    "Administración y Derecho",
    "Ciencias Naturales, Matemáticas y Estadística",
    "Artes y Humanidades",
    "Educación",
    "Salud y Bienestar",
    "Artes y Humanidades",
    "Servicios",
    "Ciencias Naturales, Matemáticas y Estadística",
    "Ciencias Naturales, Matemáticas y Estadística",
    "Ingeniería, Industria y Construcción",
    "Ingeniería, Industria y Construcción",
    "Servicios"
  )
)

```

```{r}
DF_Normalizado <- DF %>%
  left_join(mapeo_carreras, by = c("Carrera" = "carrera_original")) %>%
  mutate(Carrera = categoria_ISCED) %>%
  select(-categoria_ISCED)
```

```{r}
DF_Normalizado[] <- lapply(DF_Normalizado, function(x) {
  if (is.character(x)) tolower(x) else x
})

```

#### Escala

Esta es una variable **descrptiva ordinal**, por lo que se le aplicó el siguente criterio de orden:

$$
\text{E} < \text{D} < \text{C} < \text{B} < \text{A}
$$

```{r}
DF_Normalizado$Escala <- factor(DF_Normalizado$Escala,
                                      levels = c("e", "d", "c", "b", "a"),
                                      ordered = TRUE)
```

#### Factor Importante

Se normalizaron las respuestas eliminando acentos y separando los factores múltiples en listas. Se identificaron 8 factores válidos: "precio", "oferta", "marca", "recomendacion", "rendimiento", "portabilidad", "estetica" y "otros". Cada uno fue transformado en una variable booleana que indica si dicho factor fue considerado relevante por la persona encuestada.

```{r}
library(stringi)
library(dplyr)
library(stringr)

DF_Normalizado$`Factor importante` <- DF_Normalizado$`Factor importante` %>%
  str_split(",") %>%                      # Separar por comas
  lapply(str_trim) %>%                    # Eliminar espacios extra
  lapply(stri_trans_general, "Latin-ASCII")  # Quitar acentos

valores_validos <- c(
  "precio", 
  "oferta",
  "marca",
  "recomendacion",
  "rendimiento",
  "portabilidad",
  "estetica"
)

DF_Normalizado$`Factor importante` <- sapply(DF_Normalizado$`Factor importante`, function(x) {
  items <- tolower(trimws(unlist(x)))  # Asegurar limpieza y minúsculas
  items[!items %in% valores_validos] <- "otros"
  paste(unique(items), collapse = "; ")  # Unir como lista separada por ;
})
```

#### Costo

Se encontraron datos que usaban el punto decimal como seraparador de millar. Para corregirlo, se multiplicó estos valores por 1000.

```{r}
DF_Normalizado$Costo <- as.numeric(DF_Normalizado$Costo)
DF_Normalizado$Costo[!is.na(DF_Normalizado$Costo) & DF_Normalizado$Costo < 7.5] <- 
  DF_Normalizado$Costo[!is.na(DF_Normalizado$Costo) & DF_Normalizado$Costo < 7.5] * 1000

DF_Normalizado$Costo[DF_Normalizado$Costo < 600 | DF_Normalizado$Costo > 20000] <- NA

```

#### Antigüedad

Dentro de los datos se observaron algunos que especificaban que no contaban con una laptop, por lo que fueron eliminados, reduciendo la muestra a 1047 casos.

```{r}
DF_Normalizado$Antigüedad <- as.character(DF_Normalizado$Antigüedad)

DF_Normalizado$Antigüedad[DF_Normalizado$Antigüedad == "0 (menos de 1 año)"] <- "0"
DF_Normalizado$Antigüedad[DF_Normalizado$Antigüedad == "10 años"] <- "10"
DF_Normalizado$Antigüedad[DF_Normalizado$Antigüedad == "6 años"] <- "6"
DF_Normalizado$Antigüedad[DF_Normalizado$Antigüedad %in% c("7 años", "7 años ")] <- "7"
DF_Normalizado$Antigüedad[DF_Normalizado$Antigüedad == "3, 8 años de uso (segunda mano)"] <- "3"
valores_validos <- as.character(0:20)
DF_Normalizado <- DF_Normalizado[DF_Normalizado$Antigüedad %in% valores_validos | is.na(DF_Normalizado$Antigüedad), ]

DF_Normalizado$Antigüedad <- as.numeric(DF_Normalizado$Antigüedad)
```

#### Marca

Se depuraron respuestas que indicaban no contar con laptop o dar una descripción ambigua. Se homogenizó la variable y los valores no reconocidos se agruparon como "otro", quedando 1045 casos válidos.

```{r}
marcas <- c(
  "hp", "asus", "lenovo", "acer", "dell", "toshiba", "msi", "apple", "huaweii", "microsoft")

DF_Normalizado <- DF_Normalizado[!(DF_Normalizado$Marca %in% c("no tengo", "no tengo ", "teros( es una computadora)", "es pc")), ]
DF_Normalizado$Marca[!(DF_Normalizado$Marca %in% marcas)] <- "otro"
```

#### Tipo

Se simplificaron las categorías de tipo de laptop a opciones estandarizadas en minúsculas (ej. "gamer", "empresarial", etc.), facilitando el análisis categórico posterior.

```{r}
DF_Normalizado$Tipo[DF_Normalizado$Tipo == "empresarial (productividad y seguridad. ej: lenovo thinkpad, dell latitude)"] <- "empresarial"

DF_Normalizado$Tipo[DF_Normalizado$Tipo == "gamer (potentes. ej: asus rog, acer predator, hp omen)"] <- "gamer"

DF_Normalizado$Tipo[DF_Normalizado$Tipo == "tradicional (básicas estándar. ej: hp pavilion, lenovo ideapad)"] <- "tradicional"

DF_Normalizado$Tipo[DF_Normalizado$Tipo == "ultrabook (ligeras y delgadas. ej: macbook air, dell xps 13, asus zenbook)"] <- "ultrabook"

DF_Normalizado$Tipo[DF_Normalizado$Tipo == "convertible/desmontable (se pueden usar también como tablet o laptop. ej: hp spectre x360, lenovo yoga, microsoft surface pro)"] <- "convertible"

DF_Normalizado$Tipo[DF_Normalizado$Tipo == "orientada a diseño (rendimiento gráfico. ej: macbook pro, microsoft surface laptop studio)"] <- "orientada a diseño"


```

#### RAM

Se extrajeron los valores numéricos de la memoria RAM desde respuestas textuales. Se convirtieron los valores en terabytes a gigabytes (multiplicando por 1000), y se eliminaron respuestas no válidas o no comprendidas.

```{r}
library(stringr)

DF_Normalizado <- DF_Normalizado %>%
  mutate(RAM = tolower(as.character(RAM)),
         RAM_num = as.numeric(str_extract(RAM, "\\d+")),  # extrae primer número
         RAM = case_when(
           str_detect(RAM, "t") ~ RAM_num * 1000,
           str_detect(RAM, "no se|no sé|no estoy seguro|no lo se|nose") ~ NA,
           TRUE ~ RAM_num
         )
  ) %>%
  select(-RAM_num)

valores_validos <- c(4,8,12,16,24,32,40,48,64,96,128,192,256)

DF_Normalizado$RAM[!DF_Normalizado$RAM %in% valores_validos] <- NA
```

#### Tiempo de uso

Se transformó el tiempo de uso de formato HH:MM:SS a horas decimales. Para evitar sesgos, se eliminaron valores atípicos mayores a 18 horas diarias, dejando 1029 respuestas consistentes.

```{r}
DF_Normalizado <- DF_Normalizado %>%
  mutate(`Tiempo de uso` = hms(`Tiempo de uso`),
         `Tiempo de uso` = as.numeric(`Tiempo de uso`) / 3600,
         `Tiempo de uso` = round(`Tiempo de uso`, 2))

DF_Normalizado <- DF_Normalizado %>%
  filter(`Tiempo de uso` <= 18)
```

#### Satisfacción

La satisfacción fue convertida a una variable ordinal con cinco niveles, desde "muy insatisfecho" hasta "súper satisfecho", lo que permite un análisis de tendencia y promedios ponderados.

```{r}
DF_Normalizado$Satisfacción <- factor(DF_Normalizado$Satisfacción,
                     levels = c("muy insatisfecho",
                                "poco satisfecho",
                                "neutral",
                                "algo satisfecho",
                                "súper satisfecho"),

                     ordered = TRUE)
```

#### Sistema operativo

Se mantuvieron solo los sistemas operativos "windows", "macos" y "linux", agrupando el resto como "otros" para evitar ruido en el análisis.

```{r}
os <- c("windows", "macos", "linux")
DF_Normalizado$'Sistema operativo'[!(DF_Normalizado$'Sistema operativo' %in% os)] <- 'otros'
```

#### Publicidad

Se ordenaron las respuestas de influencia publicitaria en cinco niveles, de "nada influenciado" a "muy influenciado", lo que facilita su análisis como variable ordinal.

```{r}
DF_Normalizado$Publicidad <- factor(DF_Normalizado$Publicidad,
                     levels = c("nada influenciado",
                                "poco influenciado",
                                "neutral",
                                "algo influenciado",
                                "muy influenciado"),
                     ordered = TRUE)
```

### Revisión post-limpieza

Luego de aplicar los criterios de limpieza y transformación de los datos, se realizó una revisión final para garantizar la calidad del dataset:

-   Valores perdidos (NA): Se contabilizaron los valores faltantes en cada variable para evaluar su impacto en el análisis posterior.

```{r}
colSums(is.na(DF_Normalizado))
```

-   Duplicados: Se eliminaron posibles filas duplicadas para asegurar la unicidad de cada caso.

```{r}
DF_Normalizado <- DF_Normalizado %>% distinct()
```

-   Tipos de datos: Las variables categóricas como Marca, Tipo, y Sistema operativo fueron convertidas al tipo factor, y las variables booleanas quedaron como tipo logical, asegurando su correcta interpretación en análisis estadísticos y modelos.

```{r}
DF_Normalizado$Marca <- factor(DF_Normalizado$Marca)
DF_Normalizado$Tipo <- factor(DF_Normalizado$Tipo)
```

-   Outliers restantes: Se realizó una revisión visual de posibles valores atípicos en variables numéricas como RAM y Tiempo de uso, mediante diagramas de caja (boxplots), para confirmar que no persisten valores anómalos que distorsionen los resultados.

```{r}
boxplot(DF_Normalizado$RAM, main = "RAM")
boxplot(DF_Normalizado$`Tiempo de uso`, main = "Tiempo de uso")
```

-   Coherencia interna: Finalmente, se revisó que no existan inconsistencias lógicas entre variables. Por ejemplo, casos donde se indique poseer una laptop pero no se haya registrado información relevante como RAM, marca o tipo, fueron eliminados previamente.

## Presentación de la tabla final

Dentro del nuevo dataframe 'DF_Objetivos' se separará la variable 'Factor importante' en 8 variables y se acoplarán las variables 'Carrera', 'Escala' y 'Tiempo de uso'

```{r}
library(dplyr)
library(stringr)

DF_Objetivos <- DF_Normalizado %>%
  select(
    'Factor importante',
    'Carrera',
    'Escala',
    'Tiempo de uso'
  )

valores_validos <- c("precio", "oferta", "marca", "recomendacion", "rendimiento", "portabilidad", "estetica", "otros")

for (factor in valores_validos) {
  DF_Objetivos[[str_to_title(factor)]] <- as.integer(str_detect(
    tolower(DF_Objetivos$`Factor importante`),
    paste0("\\b", factor, "\\b")
  ))
}

DF_Objetivos <- DF_Objetivos %>%
  select(-`Factor importante`)
```

### Manejo de nulos

Debido a que las 4 cuatro variables eran obligatorias en la encuesta, no se encontraron valores nulos en la tabla final, por lo que no se realizaron acciones adicionales para tratarlos.

```{r}
#evaluando los nulos de las variables
apply(is.na(DF_Objetivos) , 2, sum)
```

## Objetivo 1: Explorar la relación entre la carrera del estudiante y el factor de mayor importancia en la elección de laptops por parte de los estudiantes.

Para analizar esta relación, se elaboraron dos tablas de frecuencias: una que incluye a todas las carreras excepto *Ingeniería, industria y construcción*, y otra exclusivamente para los estudiantes de dicha área. Esta separación se justifica debido a que la muestra correspondiente a *Ingeniería, industria y construcción* representa más del 50% del total de encuestados, lo que podría sesgar los resultados generales. Al analizar ambas por separado, se busca identificar patrones específicos en la elección de laptops según el tipo de carrera y evitar una interpretación desbalanceada de los datos.

### Tabla de frecuencias de todas las carreras (sin ingeniería)

```{r}
# Filtrar los estudiantes de ingeniería
DF_Ingenieria <- DF_Objetivos %>%
  filter(Carrera == "ingeniería, industria y construcción")

# Filtrar el resto de carreras
DF_Otros <- DF_Objetivos %>%
  filter(Carrera != "ingeniería, industria y construcción")
```


```{r}
# Agrupar por carrera y contar la frecuencia de cada factor
tabla_frecuencia <- DF_Otros %>%
  group_by(Carrera) %>%
  summarise(
    Marca = sum(Marca, na.rm = TRUE),
    Recomendacion = sum(Recomendacion, na.rm = TRUE),
    Portabilidad = sum(Portabilidad, na.rm = TRUE),
    Rendimiento = sum(Rendimiento, na.rm = TRUE),
    Oferta = sum(Oferta, na.rm = TRUE),
    Precio = sum(Precio, na.rm = TRUE),
    Estetica = sum(Estetica, na.rm = TRUE),
    Otro = sum(Otros, na.rm = TRUE)
  )

# Calcular las frecuencias relativas por carrera
tabla_frecuencia_relativa <- tabla_frecuencia %>%
  mutate(
    Marca_rel = round(Marca / sum(Marca) * 100,2),
    Recomendacion_rel = round(Recomendacion / sum(Recomendacion) * 100,2),
    Portabilidad_rel = round(Portabilidad / sum(Portabilidad) * 100,2),
    Rendimiento_rel = round(Rendimiento / sum(Rendimiento) * 100,2),
    Oferta_rel = round(Oferta / sum(Oferta) * 100,2),
    Precio_rel = round(Precio / sum(Precio) * 100,2),
    Estetica_rel = round(Estetica / sum(Estetica) * 100,2),
    Otro_rel = round(Otro / sum(Otro) * 100,2)
  )

# Visualizar las tablas
print(tabla_frecuencia_relativa)  # Frecuencias relativas
```


### Tabla de frecuencias de ingeniería

```{r}

cantidad_ing <- nrow(DF_ingenieria)
print(cantidad_ing)

# Agrupar por carrera y contar la frecuencia de cada factor
frecuencia_inge <- DF_Ingenieria %>%
  summarize(across(c(Marca, Recomendacion, Portabilidad, Rendimiento, Oferta, Precio, Estetica, Otros), sum))

# Calcular las frecuencias relativas por carrera
tabla_frecuencia_relativa_ing <- frecuencia_inge %>%
  mutate(
    Marca_rel = round(Marca / cantidad_ing * 100, 2),
    Recomendacion_rel = round(Recomendacion / cantidad_ing * 100, 2),
    Portabilidad_rel = round(Portabilidad / cantidad_ing * 100, 2),
    Rendimiento_rel = round(Rendimiento / cantidad_ing * 100, 2),
    Oferta_rel = round(Oferta / cantidad_ing * 100, 2),
    Precio_rel = round(Precio / cantidad_ing * 100, 2),
    Estetica_rel = round(Estetica / cantidad_ing * 100, 2),
    Otros_rel = round(Otros / cantidad_ing * 100, 2)
  )

# Visualizar las tablas
print(tabla_frecuencia_relativa_ing)  # Frecuencias relativas
```


## Objetivo 2:

## Objetivo 3:
